Test:
each([''], @ == '	' ? # + '' : #[:-1] + (#[-1] + @)) for 'abc	def		g	'

Code:
name=main, alternatives=[
  nr=0, parameters=[
  ], anyParm=false, code=[
    operation=FUNCTION, function=FOR, fnParm1=[
      operation=STRING, string=abc\tdef\t\tg\t
    ], fnParm2=[
      operation=FUNCTION, function=EACH, fnParm1=[
        operation=ARRAY, array=[
          operation=STRING, string=
        ]
      ], fnParm2=[
        operation=CONDITION, conExpr=[
          operation=FUNCTION, function=EQ, fnParm1=[
            operation=CURRENT
          ], fnParm2=[
            operation=STRING, string=\t
          ]
        ], conTrue=[
          operation=FUNCTION, function=ADD, fnParm1=[
            operation=RUNNING
          ], fnParm2=[
            operation=STRING, string=
          ]
        ], conFalse=[
          operation=FUNCTION, function=ADD, fnParm1=[
            operation=CALL, macro={Name=slice}, callParms=[
              operation=RUNNING
              operation=NUMBER
              operation=NUMBER, number=-1
              operation=NUMBER, number=1
            ]
          ], fnParm2=[
            operation=FUNCTION, function=ADD, fnParm1=[
              operation=FUNCTION, function=ELEMENT, fnParm1=[
                operation=RUNNING
              ], fnParm2=[
                operation=NUMBER, number=-1
              ]
            ], fnParm2=[
              operation=CURRENT
            ]
          ]
        ]
      ]
    ]
  ]
], matching=[
  type=TEST_STACK, tstack=0, tsfalse=3
  type=ALT, altnr=55, afalse=3
  type=ERROR, error=No matching macro named 'main' found, efrom=0, etill=0
]
