name=a, alternatives=[
  nr=0, parameters=[
  ], code=[
    operation=NUMBER, number=1
  ]
]
name=b, alternatives=[
  nr=0, parameters=[
    variable=[
      name=val, nr=0, multiple=false, type=NUMBER
    ], type=ANY
  ], code=[
    operation=FUNCTION, function=ADD, fnParm1=[
      operation=VARIABLE, varName=val, varNr=0
    ], fnParm2=[
      operation=NUMBER, number=1
    ]
  ]
  nr=1, parameters=[
    variable=[
      name=val, nr=0, multiple=false, type=STRING
    ], type=ANY
  ], code=[
    operation=FUNCTION, function=ADD, fnParm1=[
      operation=VARIABLE, varName=val, varNr=0
    ], fnParm2=[
      operation=STRING, string=*
    ]
  ]
  nr=2, parameters=[
    type=NUMBER, number=0
    variable=[
      name=val2, nr=0, multiple=false, type=NUMBER
    ], type=ANY
  ], code=[
    operation=FUNCTION, function=MUL, fnParm1=[
      operation=NUMBER, number=100
    ], fnParm2=[
      operation=VARIABLE, varName=val2, varNr=0
    ]
  ]
  nr=3, parameters=[
    type=STRING, string=
    variable=[
      name=val2, nr=0, multiple=false, type=NUMBER
    ], type=ANY
  ], code=[
    operation=VARIABLE, varName=val2, varNr=0
  ]
  nr=4, parameters=[
    variable=[
      name=val, nr=0, multiple=false, type=NUMBER
    ], type=ANY
    variable=[
      name=val2, nr=1, multiple=false, type=NUMBER
    ], type=ANY
  ], code=[
    operation=FUNCTION, function=ADD, fnParm1=[
      operation=VARIABLE, varName=val, varNr=0
    ], fnParm2=[
      operation=VARIABLE, varName=val2, varNr=1
    ]
  ]
]
name=main, alternatives=[
  nr=0, parameters=[
  ], code=[
    operation=FUNCTION, function=ADD, fnParm1=[
      operation=FUNCTION, function=ADD, fnParm1=[
        operation=FUNCTION, function=ADD, fnParm1=[
          operation=FUNCTION, function=ADD, fnParm1=[
            operation=FUNCTION, function=ADD, fnParm1=[
              operation=CALL, macro={Name=t.assert}, callParms=[
                operation=STRING, string=constant
                operation=NUMBER, number=1
                operation=CALL, macro={Name=a}, callParms=[
                ]
              ]
            ], fnParm2=[
              operation=CALL, macro={Name=t.assert}, callParms=[
                operation=STRING, string=type-match-1
                operation=STRING, string= *
                operation=CALL, macro={Name=b}, callParms=[
                  operation=STRING, string= 
                ]
              ]
            ]
          ], fnParm2=[
            operation=CALL, macro={Name=t.assert}, callParms=[
              operation=STRING, string=type-match-2
              operation=NUMBER, number=3
              operation=CALL, macro={Name=b}, callParms=[
                operation=NUMBER, number=2
              ]
            ]
          ]
        ], fnParm2=[
          operation=CALL, macro={Name=t.assert}, callParms=[
            operation=STRING, string=type-match-3
            operation=NUMBER, number=3
            operation=CALL, macro={Name=b}, callParms=[
              operation=NUMBER, number=5
              operation=NUMBER, number=-2
            ]
          ]
        ]
      ], fnParm2=[
        operation=CALL, macro={Name=t.assert}, callParms=[
          operation=STRING, string=type-match-4
          operation=NUMBER, number=200
          operation=CALL, macro={Name=b}, callParms=[
            operation=NUMBER, number=0
            operation=NUMBER, number=2
          ]
        ]
      ]
    ], fnParm2=[
      operation=CALL, macro={Name=t.assert}, callParms=[
        operation=STRING, string=type-match-5
        operation=NUMBER, number=2
        operation=CALL, macro={Name=b}, callParms=[
          operation=STRING, string=
          operation=NUMBER, number=2
        ]
      ]
    ]
  ]
]
name=slice, alternatives=[
]
name=t.assert, alternatives=[
  nr=0, parameters=[
    variable=[
      name=name, nr=0, multiple=false, type=STRING
    ], type=ANY
    variable=[
      name=should, nr=1, multiple=false, type=NULL
    ], type=ANY
    variable=[
      name=was, nr=2, multiple=false, type=NULL
    ], type=ANY
  ], code=[
    operation=CONDITION, conExpr=[
      operation=FUNCTION, function=EQ, fnParm1=[
        operation=VARIABLE, varName=should, varNr=1
      ], fnParm2=[
        operation=VARIABLE, varName=was, varNr=2
      ]
    ], conTrue=[
      operation=STRING, string=
    ], conFalse=[
      operation=FUNCTION, function=ADD, fnParm1=[
        operation=FUNCTION, function=ADD, fnParm1=[
          operation=FUNCTION, function=ADD, fnParm1=[
            operation=FUNCTION, function=ADD, fnParm1=[
              operation=FUNCTION, function=ADD, fnParm1=[
                operation=VARIABLE, varName=name, varNr=0
              ], fnParm2=[
                operation=STRING, string= was '
              ]
            ], fnParm2=[
              operation=VARIABLE, varName=was, varNr=2
            ]
          ], fnParm2=[
            operation=STRING, string=' should '
          ]
        ], fnParm2=[
          operation=VARIABLE, varName=should, varNr=1
        ]
      ], fnParm2=[
        operation=STRING, string=
          '
      ]
    ]
  ]
]
