name=id, alternatives=[
  nr=0, parameters=[
    type=ARRAY, marray=[
      type=MULTIPLE, mmatch=[
        type=MACRO, macro={Name=wstoken}, mparms=[
        ], mmin=0, mmax=0
      ], mmin=0, mmax=-1
      type=VARIABLE, vmatch=[
        type=ARRAY, marray=[
          type=MACRO, macro={Name=idfirst}, mparms=[
          ], mmin=0, mmax=0
          type=MULTIPLE, mmatch=[
            type=MACRO, macro={Name=idnext}, mparms=[
            ], mmin=0, mmax=0
          ], mmin=0, mmax=-1
        ], mmin=0, mmax=0
      ], variable=[
        name=i, type=NULL, record=slice
      ], mmin=0, mmax=0
    ], mmin=0, mmax=0
  ], code=[
    operation=VARIABLE, varName=i, varNr=0
  ]
]
name=idfirst, alternatives=[
  nr=0, parameters=[
    type=VARIABLE, variable=[
      name=x, type=NULL
    ], mmin=0, mmax=0
  ], if=[
    operation=FUNCTION, function=OR, fnParm1=[
      operation=FUNCTION, function=OR, fnParm1=[
        operation=FUNCTION, function=AND, fnParm1=[
          operation=FUNCTION, function=GT, fnParm1=[
            operation=VARIABLE, varName=x, varNr=0
          ], fnParm2=[
            operation=STRING, string=a
          ]
        ], fnParm2=[
          operation=FUNCTION, function=LT, fnParm1=[
            operation=VARIABLE, varName=x, varNr=0
          ], fnParm2=[
            operation=STRING, string=z
          ]
        ]
      ], fnParm2=[
        operation=FUNCTION, function=AND, fnParm1=[
          operation=FUNCTION, function=GT, fnParm1=[
            operation=VARIABLE, varName=x, varNr=0
          ], fnParm2=[
            operation=STRING, string=A
          ]
        ], fnParm2=[
          operation=FUNCTION, function=LT, fnParm1=[
            operation=VARIABLE, varName=x, varNr=0
          ], fnParm2=[
            operation=STRING, string=Z
          ]
        ]
      ]
    ], fnParm2=[
      operation=FUNCTION, function=EQ, fnParm1=[
        operation=VARIABLE, varName=x, varNr=0
      ], fnParm2=[
        operation=STRING, string=_
      ]
    ]
  ], code=[
    operation=BOOLEAN, boolean=true
  ]
]
name=idnext, alternatives=[
  nr=0, parameters=[
    type=VARIABLE, variable=[
      name=x, type=NULL
    ], mmin=0, mmax=0
  ], if=[
    operation=FUNCTION, function=OR, fnParm1=[
      operation=CALL, macro={Name=nrtoken}, callParms=[
        operation=VARIABLE, varName=x, varNr=0
      ]
    ], fnParm2=[
      operation=CALL, macro={Name=idfirst}, callParms=[
        operation=VARIABLE, varName=x, varNr=0
      ]
    ]
  ], code=[
    operation=BOOLEAN, boolean=true
  ]
]
name=main, alternatives=[
  nr=0, parameters=[
  ], code=[
    operation=FUNCTION, function=ADD, fnParm1=[
      operation=FUNCTION, function=ADD, fnParm1=[
        operation=FUNCTION, function=ADD, fnParm1=[
          operation=FUNCTION, function=ADD, fnParm1=[
            operation=FUNCTION, function=ADD, fnParm1=[
              operation=FUNCTION, function=ADD, fnParm1=[
                operation=FUNCTION, function=ADD, fnParm1=[
                  operation=FUNCTION, function=ADD, fnParm1=[
                    operation=FUNCTION, function=ADD, fnParm1=[
                      operation=CALL, macro={Name=t.assert}, callParms=[
                        operation=STRING, string=whitespace
                        operation=BOOLEAN, boolean=true
                        operation=CALL, macro={Name=token}, callParms=[
                          operation=STRING, string=(
                          operation=STRING, string=  (
                        ]
                      ]
                    ], fnParm2=[
                      operation=CALL, macro={Name=t.assert}, callParms=[
                        operation=STRING, string=token
                        operation=BOOLEAN, boolean=true
                        operation=CALL, macro={Name=token}, callParms=[
                          operation=STRING, string=(
                          operation=STRING, string= (
                        ]
                      ]
                    ]
                  ], fnParm2=[
                    operation=CALL, macro={Name=t.assert}, callParms=[
                      operation=STRING, string=unmatched
                      operation=NULL
                      operation=CALL, macro={Name=token}, callParms=[
                        operation=STRING, string=(.
                        operation=STRING, string=  (
                      ]
                    ]
                  ]
                ], fnParm2=[
                  operation=CALL, macro={Name=t.assert}, callParms=[
                    operation=STRING, string=id
                    operation=STRING, string=hi_ho
                    operation=CALL, macro={Name=id}, callParms=[
                      operation=STRING, string=  hi_ho
                    ]
                  ]
                ]
              ], fnParm2=[
                operation=CALL, macro={Name=t.assert}, callParms=[
                  operation=STRING, string=id2
                  operation=STRING, string=hi2
                  operation=CALL, macro={Name=id}, callParms=[
                    operation=STRING, string=hi2
                  ]
                ]
              ]
            ], fnParm2=[
              operation=CALL, macro={Name=t.assert}, callParms=[
                operation=STRING, string=not id
                operation=NULL
                operation=CALL, macro={Name=id}, callParms=[
                  operation=STRING, string=2hi
                ]
              ]
            ]
          ], fnParm2=[
            operation=CALL, macro={Name=t.assert}, callParms=[
              operation=STRING, string=number
              operation=NUMBER, number=1234
              operation=CALL, macro={Name=numb}, callParms=[
                operation=STRING, string= 1234
              ]
            ]
          ]
        ], fnParm2=[
          operation=CALL, macro={Name=t.assert}, callParms=[
            operation=STRING, string=negative
            operation=NUMBER, number=-1234
            operation=CALL, macro={Name=numb}, callParms=[
              operation=STRING, string= -1234
            ]
          ]
        ]
      ], fnParm2=[
        operation=CALL, macro={Name=t.assert}, callParms=[
          operation=STRING, string=not number
          operation=NULL
          operation=CALL, macro={Name=numb}, callParms=[
            operation=STRING, string= 1234 
          ]
        ]
      ]
    ], fnParm2=[
      operation=CALL, macro={Name=t.assert}, callParms=[
        operation=STRING, string=double negative
        operation=NULL
        operation=CALL, macro={Name=numb}, callParms=[
          operation=STRING, string=--1234
        ]
      ]
    ]
  ]
]
name=nrtoken, alternatives=[
  nr=0, parameters=[
    type=VARIABLE, variable=[
      name=x, type=NULL
    ], mmin=0, mmax=0
  ], if=[
    operation=FUNCTION, function=AND, fnParm1=[
      operation=FUNCTION, function=GT, fnParm1=[
        operation=VARIABLE, varName=x, varNr=0
      ], fnParm2=[
        operation=STRING, string=0
      ]
    ], fnParm2=[
      operation=FUNCTION, function=LT, fnParm1=[
        operation=VARIABLE, varName=x, varNr=0
      ], fnParm2=[
        operation=STRING, string=9
      ]
    ]
  ], code=[
    operation=BOOLEAN, boolean=true
  ]
]
name=numb, alternatives=[
  nr=0, parameters=[
    type=ARRAY, marray=[
      type=MULTIPLE, mmatch=[
        type=MACRO, macro={Name=wstoken}, mparms=[
        ], mmin=0, mmax=0
      ], mmin=0, mmax=-1
      type=VARIABLE, vmatch=[
        type=ARRAY, marray=[
          type=MULTIPLE, mmatch=[
            type=STRING, string=-, mmin=0, mmax=0
          ], mmin=0, mmax=1
          type=MACRO, macro={Name=nrtoken}, mparms=[
          ], mmin=0, mmax=0
          type=MULTIPLE, mmatch=[
            type=MACRO, macro={Name=nrtoken}, mparms=[
            ], mmin=0, mmax=0
          ], mmin=0, mmax=-1
        ], mmin=0, mmax=0
      ], variable=[
        name=n, type=NULL, record=slice
      ], mmin=0, mmax=0
    ], mmin=0, mmax=0
  ], code=[
    operation=FUNCTION, function=NUMBER, fnParm1=[
      operation=VARIABLE, varName=n, varNr=0
    ]
  ]
]
name=slice, alternatives=[
]
name=t.assert, alternatives=[
  nr=0, parameters=[
    type=VARIABLE, variable=[
      name=name, type=STRING
    ], mmin=0, mmax=0
    type=VARIABLE, variable=[
      name=should, type=NULL
    ], mmin=0, mmax=0
    type=VARIABLE, variable=[
      name=was, type=NULL
    ], mmin=0, mmax=0
  ], code=[
    operation=CONDITION, conExpr=[
      operation=FUNCTION, function=EQ, fnParm1=[
        operation=VARIABLE, varName=should, varNr=1
      ], fnParm2=[
        operation=VARIABLE, varName=was, varNr=2
      ]
    ], conTrue=[
      operation=STRING, string=
    ], conFalse=[
      operation=FUNCTION, function=ADD, fnParm1=[
        operation=FUNCTION, function=ADD, fnParm1=[
          operation=FUNCTION, function=ADD, fnParm1=[
            operation=FUNCTION, function=ADD, fnParm1=[
              operation=FUNCTION, function=ADD, fnParm1=[
                operation=VARIABLE, varName=name, varNr=0
              ], fnParm2=[
                operation=STRING, string= was '
              ]
            ], fnParm2=[
              operation=VARIABLE, varName=was, varNr=2
            ]
          ], fnParm2=[
            operation=STRING, string=' should '
          ]
        ], fnParm2=[
          operation=VARIABLE, varName=should, varNr=1
        ]
      ], fnParm2=[
        operation=STRING, string=
          '
      ]
    ]
  ]
]
name=token, alternatives=[
  nr=0, parameters=[
    type=VARIABLE, variable=[
      name=tok, type=NULL
    ], mmin=0, mmax=0
    type=ARRAY, marray=[
      type=MULTIPLE, mmatch=[
        type=MACRO, macro={Name=wstoken}, mparms=[
        ], mmin=0, mmax=0
      ], mmin=0, mmax=-1
      type=CONSTANT, cparm=tok, constant=0, mmin=0, mmax=0
    ], mmin=0, mmax=0
  ], code=[
    operation=BOOLEAN, boolean=true
  ]
]
name=wstoken, alternatives=[
  nr=0, parameters=[
    type=VARIABLE, variable=[
      name=x, type=NULL
    ], mmin=0, mmax=0
  ], if=[
    operation=FUNCTION, function=OR, fnParm1=[
      operation=FUNCTION, function=OR, fnParm1=[
        operation=FUNCTION, function=OR, fnParm1=[
          operation=FUNCTION, function=EQ, fnParm1=[
            operation=VARIABLE, varName=x, varNr=0
          ], fnParm2=[
            operation=STRING, string= 
          ]
        ], fnParm2=[
          operation=FUNCTION, function=EQ, fnParm1=[
            operation=VARIABLE, varName=x, varNr=0
          ], fnParm2=[
            operation=STRING, string=\t
          ]
        ]
      ], fnParm2=[
        operation=FUNCTION, function=EQ, fnParm1=[
          operation=VARIABLE, varName=x, varNr=0
        ], fnParm2=[
          operation=STRING, string=\r
        ]
      ]
    ], fnParm2=[
      operation=FUNCTION, function=EQ, fnParm1=[
        operation=VARIABLE, varName=x, varNr=0
      ], fnParm2=[
        operation=STRING, string=
          
      ]
    ]
  ], code=[
    operation=BOOLEAN, boolean=true
  ]
]
