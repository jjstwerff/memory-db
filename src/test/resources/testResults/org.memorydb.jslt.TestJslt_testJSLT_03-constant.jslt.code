name=const, alternatives=[
  nr=0, parameters=[
    type=NUMBER, number=2
  ], anyParm=false, code=[
    operation=NUMBER, number=3
  ]
  nr=1, parameters=[
    variable=[
      name=elm, nr=0, type=NULL
    ], type=ANY
  ], anyParm=false, code=[
    operation=VARIABLE, varName=elm, varNr=0
  ]
], matching=[
  type=TEST_STACK, tstack=1, tsfalse=6
  type=PARM, parm=0, pfalse=5
  type=TEST_NUMBER, mnumber=2, mnfalse=5
  type=STACK, stack=1
  type=ALT, altnr=550, afalse=5
  type=ALT, altnr=639, afalse=6
  type=JUMP, jump=MISS
]
name=main, alternatives=[
  nr=0, parameters=[
  ], anyParm=false, code=[
    operation=FUNCTION, function=ADD, fnParm1=[
      operation=FUNCTION, function=ADD, fnParm1=[
        operation=CALL, macro={Name=t.assert}, callParms=[
          operation=STRING, string=other
          operation=STRING, string=
          operation=CALL, macro={Name=const}, callParms=[
            operation=STRING, string=
          ]
        ]
      ], fnParm2=[
        operation=CALL, macro={Name=t.assert}, callParms=[
          operation=STRING, string=hit
          operation=NUMBER, number=3
          operation=CALL, macro={Name=const}, callParms=[
            operation=NUMBER, number=2
          ]
        ]
      ]
    ], fnParm2=[
      operation=CALL, macro={Name=t.assert}, callParms=[
        operation=STRING, string=number
        operation=NUMBER, number=3
        operation=CALL, macro={Name=const}, callParms=[
          operation=NUMBER, number=3
        ]
      ]
    ]
  ]
], matching=[
  type=TEST_STACK, tstack=0, tsfalse=2
  type=ALT, altnr=770, afalse=2
  type=JUMP, jump=MISS
]
name=slice, alternatives=[
], matching=[
  type=JUMP, jump=MISS
]
name=t.assert, alternatives=[
  nr=0, parameters=[
    variable=[
      name=name, nr=0, type=STRING
    ], type=ANY
    variable=[
      name=should, nr=1, type=NULL
    ], type=ANY
    variable=[
      name=was, nr=2, type=NULL
    ], type=ANY
  ], anyParm=false, code=[
    operation=CONDITION, conExpr=[
      operation=FUNCTION, function=EQ, fnParm1=[
        operation=VARIABLE, varName=should, varNr=1
      ], fnParm2=[
        operation=VARIABLE, varName=was, varNr=2
      ]
    ], conTrue=[
      operation=STRING, string=
    ], conFalse=[
      operation=FUNCTION, function=ADD, fnParm1=[
        operation=FUNCTION, function=ADD, fnParm1=[
          operation=FUNCTION, function=ADD, fnParm1=[
            operation=FUNCTION, function=ADD, fnParm1=[
              operation=FUNCTION, function=ADD, fnParm1=[
                operation=VARIABLE, varName=name, varNr=0
              ], fnParm2=[
                operation=STRING, string= was '
              ]
            ], fnParm2=[
              operation=VARIABLE, varName=was, varNr=2
            ]
          ], fnParm2=[
            operation=STRING, string=' should '
          ]
        ], fnParm2=[
          operation=VARIABLE, varName=should, varNr=1
        ]
      ], fnParm2=[
        operation=STRING, string=
          '
      ]
    ]
  ]
], matching=[
  type=TEST_STACK, tstack=3, tsfalse=4
  type=PARM, parm=0, pfalse=4
  type=TEST_TYPE, ttype=TYPE_STRING, ttfalse=4
  type=ALT, altnr=55, afalse=4
  type=JUMP, jump=MISS
]
